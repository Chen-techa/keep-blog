<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/09/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>laravel报错</title>
    <url>/2021/09/20/laravel%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>composer创建laravel项目报错问题</p>
<p><img src="C:\Users\91790\Desktop\composer报错信息.png" alt="composer报错信息"></p>
<p>若显示如图的报错信息，则需要更换composer镜像源</p>
<p>之前用的是composer中国镜像，地址：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://pkg.phpcomposer.com/#how-to-install-composer</span><br></pre></td></tr></table></figure>

<p>换成阿里镜像后成功创建laravel项目</p>
<p><img src="C:\Users\91790\AppData\Roaming\Typora\typora-user-images\image-20210708151656481.png" alt="image-20210708151656481"></p>
<p>阿里镜像地址：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://developer.aliyun.com/article/726948spm=a2c6h.14164896.0.0.6f8a791fPW7fDO</span><br></pre></td></tr></table></figure>

<p>阿里镜像（切换）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p>切换之后可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -gl</span><br></pre></td></tr></table></figure>

<p>来查看镜像地址</p>
<p><img src="C:\Users\91790\AppData\Roaming\Typora\typora-user-images\image-20210708152013277.png" alt="image-20210708152013277"></p>
<p>注：切换镜像需要安装composer</p>
]]></content>
  </entry>
  <entry>
    <title>laravel问题（二）</title>
    <url>/2021/09/20/laravel%E9%97%AE%E9%A2%98%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Laravel5-7"><a href="#Laravel5-7" class="headerlink" title="Laravel5.7"></a>Laravel5.7</h3><h4 id="一、使用Git-Clone将项目复制到新的开发环境中"><a href="#一、使用Git-Clone将项目复制到新的开发环境中" class="headerlink" title="一、使用Git Clone将项目复制到新的开发环境中"></a>一、使用Git Clone将项目复制到新的开发环境中</h4><p>1.首先在原始文件夹中（假设现在使用的master分支）我们需要推送项目到Git中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//以码云为例 网址：http://gitee.com</span><br><span class="line">git add . //将代码暂存到本地仓库</span><br><span class="line">git commit -m &#x27;初始化本地仓库&#x27;//提交信息</span><br><span class="line">gti remote add origin https://gitee.com/user/entrepot.git   //entrepot是仓库的意思 //user则为用户在gitee的用户名</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<p>2.从Gitee上复制下来项目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/user/entrepot.git</span><br></pre></td></tr></table></figure>

<p>3.接下来我们需要进行composer install来解决dependencies：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure>

<p>4.完成后，我们需要建立.env文件，因为.env默认是gitee所忽略的文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure>

<p>5.因为env.example中默认没有app key，所以我们在.env中生成新的app key：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure>

<p>6.修改.env文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DB_CONNECTION=mysql //链接数据库</span><br><span class="line">DB_HOST=10.10.102.92 //IP地址</span><br><span class="line">DB_PORT=3306 //数据库端口号</span><br><span class="line">DB_DATABASE=webshop //数据库名称</span><br><span class="line">DB_USERNAME=root //数据库用户名</span><br><span class="line">DB_PASSWORD=root //数据库密码</span><br></pre></td></tr></table></figure>

<p>7.保存后，运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artsian migrate</span><br></pre></td></tr></table></figure>



<h4 id="二、app-gt-Http-gt"><a href="#二、app-gt-Http-gt" class="headerlink" title="二、app==&gt;Http==&gt;"></a>二、app==&gt;Http==&gt;</h4><p>主要为控制器的存放</p>
<p>新建控制器的命令为:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan make:controller PhpController<span class="comment">//在控制器的跟目录下新建一个控制器</span></span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artsian make:controller filer/PhpController <span class="comment">//在指定文件目录下新建一个控制器</span></span><br></pre></td></tr></table></figure>

<h4 id="三、resources-gt-views-为视图存放目录-界面显示"><a href="#三、resources-gt-views-为视图存放目录-界面显示" class="headerlink" title="三、resources==&gt;views(为视图存放目录,界面显示)"></a>三、resources==&gt;views(为视图存放目录,界面显示)</h4><p>新建的视图后缀名需要是 index.blade.php</p>
<p>主页页面结构：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">extends</span>(<span class="string">&#x27;frame&#x27;</span>)<span class="comment">//frame为继承模板</span></span><br><span class="line">@section(<span class="string">&#x27;style&#x27;</span>)<span class="comment">//引入的style的样式</span></span><br><span class="line">@endsection</span><br><span class="line"></span><br><span class="line">@section(<span class="string">&#x27;content&#x27;</span>)<span class="comment">//界面主要内容</span></span><br><span class="line">@endsection</span><br><span class="line"></span><br><span class="line">@section(<span class="string">&#x27;script&#x27;</span>)<span class="comment">//js脚本</span></span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure>

<h4 id="四、引入外部js文件的方式"><a href="#四、引入外部js文件的方式" class="headerlink" title="四、引入外部js文件的方式"></a>四、引入外部js文件的方式</h4><p>在project==》public ==》 js(文件顺序)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@section(<span class="string">&#x27;script&#x27;</span>)<span class="comment">//js脚本</span></span><br><span class="line">	&lt;scritp src=<span class="string">&quot;&#123;&#123;URL::asset(js/javascritp.js)&#125;&#125;&quot;</span>&gt;&lt;/script&gt;<span class="comment">//举例</span></span><br><span class="line">    &lt;scritp src=<span class="string">&quot;http://xxx.xxx.xxx&quot;</span>&gt;&lt;/script&gt;<span class="comment">//根据网址引入的js</span></span><br><span class="line">@endsection</span><br><span class="line"><span class="comment">//css的引入方法大致同上</span></span><br></pre></td></tr></table></figure>

<h4 id="五、主界面点击模块跳转到对应的页面"><a href="#五、主界面点击模块跳转到对应的页面" class="headerlink" title="五、主界面点击模块跳转到对应的页面"></a>五、主界面点击模块跳转到对应的页面</h4><p>project==&gt;routes==&gt;web.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::prefix(<span class="string">&#x27;/admin&#x27;</span>)-&gt;group(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//成组</span></span><br><span class="line">	Route::get(<span class="string">&#x27;/shoplist&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">		<span class="keyword">return</span> view(<span class="string">&#x27;shoplist&#x27;</span>);<span class="comment">//返回对应的视图</span></span><br><span class="line">	&#125;)-&gt;name(<span class="string">&#x27;shoplist&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>模板frome的跳转方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//在模板下写入</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;&lt;?php</span><br><span class="line">        if(stripos($_SERVER[&#x27;REQUSET_URI&#x27;],&#x27;admin/shoplist&#x27;) != false) echo &#x27;active&#x27;?&gt;&quot;&gt;</span><br><span class="line">    	&lt;a href=&quot;/admin/shoplist&quot;&gt;</span><br><span class="line">   			商品信息</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<h4 id="六、在phpstudy-pro中搭建网站环境的注意项："><a href="#六、在phpstudy-pro中搭建网站环境的注意项：" class="headerlink" title="六、在phpstudy_pro中搭建网站环境的注意项："></a>六、在phpstudy_pro中搭建网站环境的注意项：</h4><p>在project==》public==》.htaccess</p>
<p>1.首先复制一份.htaccess文件</p>
<p>2.在phpstudy中搭建网址:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www.shoppping.com:80 //默认端口为80端口，若修改在进入浏览器之后则需要在网址后缀中添加所修改的端口号</span><br><span class="line">//搭建网址的目录中不可汉中文</span><br></pre></td></tr></table></figure>

<p>3.再次打开.htaccess文件 将复制的.htaccess文件中的内容重新复制到.htaccess文件中</p>
]]></content>
  </entry>
  <entry>
    <title>vue打包路径问题</title>
    <url>/2021/09/20/newpapername/</url>
    <content><![CDATA[<h1 id="vue项目打包问题-脚手架版本vue-cli2"><a href="#vue项目打包问题-脚手架版本vue-cli2" class="headerlink" title="vue项目打包问题(脚手架版本vue-cli2)"></a>vue项目打包问题(脚手架版本vue-cli2)</h1><h2 id="项目目录如下："><a href="#项目目录如下：" class="headerlink" title="项目目录如下："></a>项目目录如下：</h2><h2 id="项目在运行npm-run-build命令之后在本地打开dist文件中的index-html，显示无内容"><a href="#项目在运行npm-run-build命令之后在本地打开dist文件中的index-html，显示无内容" class="headerlink" title="项目在运行npm run build命令之后在本地打开dist文件中的index.html，显示无内容"></a>项目在运行npm run build命令之后在本地打开dist文件中的index.html，显示无内容</h2><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><h2 id="1-可能是因为-router-》index中的mode：‘history’导致的错误，可以先添加注释，在进行打包，运行"><a href="#1-可能是因为-router-》index中的mode：‘history’导致的错误，可以先添加注释，在进行打包，运行" class="headerlink" title="1.可能是因为 router===》index中的mode：‘history’导致的错误，可以先添加注释，在进行打包，运行"></a>1.可能是因为 router===》index中的mode：‘history’导致的错误，可以先添加注释，在进行打包，运行</h2><h2 id="2-打包之后的项目路径不正确-》解决-》修改项目路径改为相对路径"><a href="#2-打包之后的项目路径不正确-》解决-》修改项目路径改为相对路径" class="headerlink" title="2.打包之后的项目路径不正确===》解决====》修改项目路径改为相对路径"></a>2.打包之后的项目路径不正确===》解决====》修改项目路径改为相对路径</h2><h2 id="修改config-》index-js-》build-》assetsPubilcPath中的‘-’改为‘-’"><a href="#修改config-》index-js-》build-》assetsPubilcPath中的‘-’改为‘-’" class="headerlink" title="修改config==》index.js==》build==》assetsPubilcPath中的‘/’改为‘./’"></a>修改config==》index.js==》build==》assetsPubilcPath中的‘/’改为‘./’</h2><h2 id="修改build-》utils-js-》ExtractTextPlugin-extract中增加一行pubilcPath-’-‘"><a href="#修改build-》utils-js-》ExtractTextPlugin-extract中增加一行pubilcPath-’-‘" class="headerlink" title="修改build==》utils.js==》ExtractTextPlugin.extract中增加一行pubilcPath:’../../‘"></a>修改build==》utils.js==》ExtractTextPlugin.extract中增加一行pubilcPath:’../../‘</h2><h1 id="脚手架vue-cli3"><a href="#脚手架vue-cli3" class="headerlink" title="(脚手架vue/cli3)"></a>(脚手架vue/cli3)</h1><h2 id="解决-vue-cli3打包后页面空白"><a href="#解决-vue-cli3打包后页面空白" class="headerlink" title="解决@vue/cli3打包后页面空白"></a>解决@vue/cli3打包后页面空白</h2><h2 id="npm-run-build-后放到服务器上页面显示空白"><a href="#npm-run-build-后放到服务器上页面显示空白" class="headerlink" title="npm run build 后放到服务器上页面显示空白"></a>npm run build 后放到服务器上页面显示空白</h2><h2 id="vue-config-js-项目目录下"><a href="#vue-config-js-项目目录下" class="headerlink" title="vue.config.js(项目目录下)"></a>vue.config.js(项目目录下)</h2><h2 id="若没有vue-config-js文件新建一个即可"><a href="#若没有vue-config-js文件新建一个即可" class="headerlink" title="若没有vue.config.js文件新建一个即可"></a>若没有vue.config.js文件新建一个即可</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">// Template for index.html</span><br><span class="line">index: path.resolve(__dirname, &#x27;../dist/index.html&#x27;),</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Paths</span><br><span class="line">assetsRoot: path.resolve(__dirname, &#x27;../dist&#x27;),</span><br><span class="line">assetsSubDirectory: &#x27;static&#x27;,</span><br><span class="line">//修改之前</span><br><span class="line">// assetsPubilcPath:&#x27;/&#x27;,</span><br><span class="line">//修改之后</span><br><span class="line">assetsPublicPath: &#x27;./&#x27;,</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (options.extract) &#123;</span><br><span class="line">return ExtractTextPlugin.extract(&#123;</span><br><span class="line">use: loaders,</span><br><span class="line">fallback: &#x27;vue-style-loader&#x27;,</span><br><span class="line">publicPath:&#x27;../../&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return [&#x27;vue-style-loader&#x27;].concat(loaders)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">publicPath: &#x27;./&#x27;,  //输出的根路径 默认是/ 如果你的网站是app.com/vue 这更改此配置项</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="路由模式采用hash模式（路由的默认模式）"><a href="#路由模式采用hash模式（路由的默认模式）" class="headerlink" title="路由模式采用hash模式（路由的默认模式）"></a>路由模式采用hash模式（路由的默认模式）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const routes = [</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes,</span><br><span class="line">// mode: &#x27;history&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export default router</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
